"use strict";(self.webpackChunkcutiepy_website=self.webpackChunkcutiepy_website||[]).push([[6971],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),y=o,k=d["".concat(s,".").concat(y)]||d[y]||c[y]||i;return n?r.createElement(k,a(a({ref:t},p),{},{components:n})):r.createElement(k,a({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1269:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return d}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=n(9960),l=["components"],s={sidebar_position:1,title:"Home"},u="Documentation",p={unversionedId:"index",id:"index",title:"Home",description:"Welcome to the CutiePy documentation.",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/chenbobby/cutiepy/tree/main/cutiepy_website/docs/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Home"},sidebar:"tutorialSidebar",next:{title:"Quickstart",permalink:"/docs/quickstart"}},c={},d=[{value:"Start Here",id:"start-here",level:2},{value:"What is CutiePy?",id:"what-is-cutiepy",level:2},{value:"Use Cases",id:"use-cases",level:3},{value:"Scalability",id:"scalability",level:3},{value:"Monitoring",id:"monitoring",level:3}],y={toc:d};function k(e){var t=e.components,n=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},y,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"documentation"},"Documentation"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Welcome to the CutiePy documentation."),"\nThis is a collection of resources to help you get started with CutiePy."),(0,i.kt)("h2",{id:"start-here"},"Start Here"),(0,i.kt)("p",null,"Here are some high-level resources to help you learn more about CutiePy."),(0,i.kt)("p",null,(0,i.kt)(a.Z,{to:"/docs/quickstart",style:{"font-size":"1.25rem","font-weight":"bold"},mdxType:"Link"},"Quickstart"),(0,i.kt)("br",null),(0,i.kt)("span",{style:{"font-style":"italic"}},"Install and run CutiePy in 5 minutes")),(0,i.kt)("p",null,(0,i.kt)(a.Z,{to:"/docs/tutorial",style:{"font-size":"1.25rem","font-weight":"bold"},mdxType:"Link"},"Tutorial"),(0,i.kt)("br",null),(0,i.kt)("span",{style:{"font-style":"italic"}},"Build an X with CutiePy")),(0,i.kt)("p",null,(0,i.kt)(a.Z,{to:"/docs/how-to",style:{"font-size":"1.25rem","font-weight":"bold"},mdxType:"Link"},"How-To Guides"),(0,i.kt)("br",null),(0,i.kt)("span",{style:{"font-style":"italic"}},"Learn how to use CutiePy for web apps, cron jobs, ML experiments, and more")),(0,i.kt)("p",null,(0,i.kt)(a.Z,{to:"/docs/explanations",style:{"font-size":"1.25rem","font-weight":"bold"},mdxType:"Link"},"Explanations"),(0,i.kt)("br",null),(0,i.kt)("span",{style:{"font-style":"italic"}},"Read about how CutiePy works under the hood")),(0,i.kt)("p",null,(0,i.kt)(a.Z,{to:"/docs/reference",style:{"font-size":"1.25rem","font-weight":"bold"},mdxType:"Link"},"API Reference"),(0,i.kt)("br",null),(0,i.kt)("span",{style:{"font-style":"italic"}},"User manual for the CutiePy library, ",(0,i.kt)("code",{style:{"font-style":"normal"}},"cutiepy")," commands, and configuration options")),(0,i.kt)("p",null,(0,i.kt)(a.Z,{to:"#",style:{"font-size":"1.25rem","font-weight":"bold"},mdxType:"Link"},"Deployment Checklist"),(0,i.kt)("br",null),(0,i.kt)("span",{style:{"font-style":"italic"}},"Security and performance considerations for production environments")),(0,i.kt)("h2",{id:"what-is-cutiepy"},"What is CutiePy?"),(0,i.kt)("p",null,"CutiePy is an ",(0,i.kt)("strong",{parentName:"p"},"open source, fully-featured job queue for Python workloads"),"."),(0,i.kt)("p",null,"CutiePy ships with a ",(0,i.kt)("strong",{parentName:"p"},"real-time monitoring dashboard")," to help you track your jobs and workers."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"#TODO",alt:"CutiePy UI Screenshot"})),(0,i.kt)("p",null,'You can use CutiePy to define "jobs" (any Python function) and run these jobs on background workers.'),(0,i.kt)("p",null,"You can also define:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#TODO-scheduled-jobs-docs"},(0,i.kt)("strong",{parentName:"a"},"scheduled jobs"))," that run at a later time"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#TODO-periodic-jobs-docs"},(0,i.kt)("strong",{parentName:"a"},"periodic jobs"))," that run at regular intervals, like a ",(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cron"},(0,i.kt)("inlineCode",{parentName:"a"},"cron"))," job.")),(0,i.kt)("p",null,"Here is a simple example of how CutiePy is used in practice:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="cutie.py"',title:'"cutie.py"'},'import cutiepy\nimport time\n\nregistry = cutiepy.Registry()\n\n@registry.job\ndef bake_a_pie(flavor, recipient):\n    time.sleep(3)\n    pie = f"{flavor} pie for {recipient}"\n    print(f"Your {pie} is ready!")\n    return pie\n\n\n# Enqueue your job to run on a background worker.\nbake_a_pie.enqueue_job(args=["apple", "Alice"])\n\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="Output"',title:'"Output"'},'Printed to stdout: "Your apple pie for Alice is ready!"\nReturn value:      "apple pie for Alice"\n')),(0,i.kt)("p",null,"Visit our ",(0,i.kt)("a",{parentName:"p",href:"/docs/quickstart"},(0,i.kt)("strong",{parentName:"a"},"Quickstart"))," guide to get up and running with CutiePy in less than 5 minutes."),(0,i.kt)("p",null,"You can also read our ",(0,i.kt)("a",{parentName:"p",href:"/docs/tutorial"},(0,i.kt)("strong",{parentName:"a"},"Tutorial"))," to learn about CutiePy features and build an X with CutiePy."),(0,i.kt)("h3",{id:"use-cases"},"Use Cases"),(0,i.kt)("p",null,"CutiePy is flexible and scalable for many use cases:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"running background jobs in ",(0,i.kt)("a",{parentName:"li",href:"https://www.djangoproject.com/"},"Django"),", ",(0,i.kt)("a",{parentName:"li",href:"https://flask.palletsprojects.com/"},"Flask"),", or ",(0,i.kt)("a",{parentName:"li",href:"https://fastapi.tiangolo.com/"},"FastAPI")," web apps"),(0,i.kt)("li",{parentName:"ul"},"scheduling cron jobs"),(0,i.kt)("li",{parentName:"ul"},"parallelizing ML training and validation workloads")),(0,i.kt)("h3",{id:"scalability"},"Scalability"),(0,i.kt)("p",null,"CutiePy is horizontally scalable and can run with thousands of background workers. CutiePy has supported clusters of up to 100 workers, processing 100k jobs / second, on 3 Linode boxes."),(0,i.kt)("p",null,"Use the command ",(0,i.kt)("inlineCode",{parentName:"p"},"cutiepy worker")," to run your CutiePy workers."),(0,i.kt)("p",null,"[TODO]"," Visualization of CutiePy throughput"),(0,i.kt)("h3",{id:"monitoring"},"Monitoring"),(0,i.kt)("p",null,"CutiePy includes a dashboard for monitoring tasks and workers. The dashboard runs as an HTTP server and can be viewed in the web browser."),(0,i.kt)("p",null,"Use the command ",(0,i.kt)("inlineCode",{parentName:"p"},"cutiepy dashboard")," to run the CutiePy dashboard server."),(0,i.kt)("p",null,"[TODO]"," Screenshot of dashboard"))}k.isMDXComponent=!0}}]);