"use strict";(self.webpackChunkcutiepy_website=self.webpackChunkcutiepy_website||[]).push([[971],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,f=m["".concat(l,".").concat(d)]||m[d]||s[d]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:i,o[1]=u;for(var c=2;c<a;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1269:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return s}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=(n(9960),["components"]),u={sidebar_position:1,title:"Home"},l="Documentation",c={unversionedId:"index",id:"index",title:"Home",description:"Welcome to the official CutiePy documentation.",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/chenbobby/cutiepy/tree/main/cutiepy_website/docs/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Home"},sidebar:"tutorialSidebar",next:{title:"Quickstart",permalink:"/docs/quickstart"}},p={},s=[{value:"Disclaimer",id:"disclaimer",level:2},{value:"What is CutiePy?",id:"what-is-cutiepy",level:2},{value:"Example",id:"example",level:3},{value:"Learn CutiePy",id:"learn-cutiepy",level:2}],m={toc:s};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"documentation"},"Documentation"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Welcome to the official CutiePy documentation."),"\nThis is a collection of resources to help you get started with CutiePy."),(0,a.kt)("h2",{id:"disclaimer"},"Disclaimer"),(0,a.kt)("p",null,"CutiePy is not ready for use in production."),(0,a.kt)("h2",{id:"what-is-cutiepy"},"What is CutiePy?"),(0,a.kt)("p",null,"CutiePy is an ",(0,a.kt)("strong",{parentName:"p"},"open source job queue for Python"),". CutiePy allows you to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#TODO-enqueue-job-docs"},(0,a.kt)("strong",{parentName:"a"},"enqueue a job"))," to run immediately"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#TODO-scheduledj-jobs-docs"},(0,a.kt)("strong",{parentName:"a"},"create scheduled jobs"))," that will run once at a later time"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#TODO-recurring-jobs-docs"},(0,a.kt)("strong",{parentName:"a"},"create recurring jobs"))," that will run periodically at a fixed interval, like a ",(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Cron"},(0,a.kt)("inlineCode",{parentName:"a"},"cron"))," job.")),(0,a.kt)("p",null,"CutiePy ships with a ",(0,a.kt)("strong",{parentName:"p"},"real-time monitoring dashboard")," to help you track your jobs and workers."),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"#TODO",alt:"CutiePy UI Screenshot"})),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="cutie.py"',title:'"cutie.py"'},'import cutiepy\nimport time\n\nregistry = cutiepy.Registry()\n\n@registry.job\ndef bake_a_pie(flavor, recipient):\n    time.sleep(3) # Simulate a long-running workload\n    pie = f"{flavor} pie for {recipient}"\n    print(f"Your {pie} is ready!")\n    return pie\n\n\n# Enqueue your job to run on a worker.\nbake_a_pie.enqueue_job(args=["apple", "Alice"])\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console",metastring:'title="Output"',title:'"Output"'},'Printed to stdout: "Your apple pie for Alice is ready!"\nReturn value:      "apple pie for Alice"\n')),(0,a.kt)("h2",{id:"learn-cutiepy"},"Learn CutiePy"),(0,a.kt)("p",null,"Visit our ",(0,a.kt)("a",{parentName:"p",href:"/docs/quickstart"},(0,a.kt)("strong",{parentName:"a"},"Quickstart"))," guide to get up and running with CutiePy in less than 5 minutes."))}d.isMDXComponent=!0}}]);